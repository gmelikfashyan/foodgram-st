services:
  db:
    container_name: foodgram-db
    image: postgres:16
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - postgres:/var/lib/postgresql/data/

  backend:
    container_name: foodgram-backend
    build:
      context: ../backend
      dockerfile: Dockerfile
    volumes:
      - static_value:/app/static/
      - media_value:/app/media/
      - ../data:/app/data
    ports:
      - "8000:8000"
    env_file:
      - ./.env
    depends_on:
      - db 

  frontend:
    container_name: foodgram-frontend
    build:
      context: ../frontend
      dockerfile: Dockerfile
    volumes:
      - ../frontend/:/app/result_build/
    depends_on:
      - backend

  nginx:
    container_name: foodgram-proxy
    image: nginx:1.25.4-alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ../frontend/build:/usr/share/nginx/html/
      - ../docs/:/usr/share/nginx/html/api/docs/
      - static_value:/var/html/static/
      - media_value:/var/html/media/
    depends_on:
      - frontend
    restart: always

volumes:
  postgres: {}
  static_value: {}
  media_value: {}
